const sudoku = require('./sudoku');

// Ниже представленны тестовые данные для вашей функции, они имеют 3 уровня сложности
// * Пять головоломок могут быть решены с помощью базовой логики.
// * Пять требуют немного более продвинутой логики.
// * Пять требуют от вашего решателя умения угадывать и перерешивать, если зашёл в тупик.
test('', () => {
  const data =
    '53--7----6--195----98----6-8---6---34--8-3--17---2---6-6----28----419--5----8--79';
  const result =
    '534678912672195348198342567859761423426853791713924856961537284287419635345286179';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '1-58-2----9--764-52--4--819-19--73-6762-83-9-----61-5---76---3-43--2-5-16--3-89--';
  const result =
    '145892673893176425276435819519247386762583194384961752957614238438729561621358947';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '--5-3--819-285--6-6----4-5---74-283-34976---5--83--49-15--87--2-9----6---26-495-3';
  const result =
    '475936281932851764681274359517492836349768125268315497153687942794523618826149573';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '29-5----77-----4----4738-129-2--3-648---5--7-5---672--3-9--4--5----8-7---87--51-9';
  const result =
    '293541687718296453654738912972813564846952371531467298369174825125389746487625139';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '-8--2-----4-5--32--2-3-9-466---9---4---64-5-1134-5-7--36---4--24-723-6-----7--45-';
  const result =
    '783426915946518327521379846658197234279643581134852769365984172417235698892761453';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '6-873----2-----46-----6482--8---57-19--618--4-31----8-86-2---39-5----1--1--4562--';
  const result =
    '648732915275189463319564827486325791927618354531947682864271539752893146193456278';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '---6891--8------2915------84-3----5-2----5----9-24-8-1-847--91-5------6--6-41----';
  const result =
    '732689145846571329159324678413968257278135496695247831384756912521893764967412583';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '-3-5--8-45-42---1---8--9---79-8-61-3-----54---5------78-----7-2---7-46--61-3--5--';
  const result =
    '239517864574268319168439275792846153381975426456123987843651792925784631617392548';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '-96-4---11---6---45-481-39---795--43-3--8----4-5-23-18-1-63--59-59-7-83---359---7';
  const result =
    '396245781178369524524817396287951643931486275465723918712638459659174832843592167';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '----754----------8-8-19----3----1-6--------34----6817-2-4---6-39------2-53-2-----';
  const result =
    '693875412145632798782194356357421869816957234429368175274519683968743521531286947';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '3---------5-7-3--8----28-7-7------43-----------39-41-54--3--8--1---4----968---2--';
  const result =
    '387419526259763418641528379716285943594631782823974165472396851135842697968157234';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '3-26-9--55--73----------9-----94----------1-9----57-6---85----6--------3-19-82-4-';
  const result =
    '382619475594738621176425938863941752457263189921857364738594216245176893619382547';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '-2-5----48-5--------48-9-2------5-73-9-----6-25-9------3-6-18--------4-71----4-9-';
  const result =
    '926513784815247639374869521648125973791438265253976148437691852569382417182754396';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '--7--8------2---6-65--79----7----3-5-83---67-2-1----8----71--38-2---5------4--2--';
  const result =
    '397648152814253769652179843479861325583924671261537984946712538728395416135486297';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '----------2-65-------18--4--9----6-4-3---57-------------------73------9----------';
  const result =
    '143279568829654173567183249291738654436915782758426931684591327312867495975342816';

  expect(sudoku(data)).toEqual(result);
});
test('', () => {
  const data =
    '---------------------------------------------------------------------------------';
  const result =
    '123456789456789123789123456214365897365897214897214365531642978642978531978531642';

  expect(sudoku(data)).toEqual(result);
});
